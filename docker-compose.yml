version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fuel-tracker-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-fuel_tracker}
      POSTGRES_USER: ${DB_USER:-fuel_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fuel_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fuel_user} -d ${DB_NAME:-fuel_tracker}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fuel-tracker-network

  redis:
    image: redis:7-alpine
    container_name: fuel-tracker-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fuel-tracker-network

  backend:
    build:
      context: ./fuel-tracker-backend
      dockerfile: Dockerfile
    container_name: fuel-tracker-backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./fuel-tracker-backend:/app
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      # Database
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-fuel_tracker}
      - DB_USER=${DB_USER:-fuel_user}
      - DB_PASSWORD=${DB_PASSWORD:-fuel_password}
      - DB_PORT=5432
      # Django
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fuel-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/schema/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./fuel-tracker-frontend
      dockerfile: Dockerfile.dev
    container_name: fuel-tracker-frontend
    command: npm run dev -- --host 0.0.0.0
    volumes:
      - ./fuel-tracker-frontend:/app
      - /app/node_modules  # Prevent overwriting node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    networks:
      - fuel-tracker-network

volumes:
  postgres_data:
    driver: local
  backend_logs:
    driver: local

networks:
  fuel-tracker-network:
    driver: bridge
